---
# tasks file for testing-stuff

#- name: Writing mounting script on datanodes -- 1
#  file:
#    path: /root/mountfs.sh
#    state: touch
#    mode: 0777
#  when: inventory_hostname in groups["data_nodes"]
#
#
#- name: Writing mounting script on datanodes -- 2
#  lineinfile:
#    path: /root/mountfs.sh
#    state: present
#    line: "#!/bin/bash"
#  when: inventory_hostname in groups["data_nodes"]
#
#
#- name: Writing mounting script on opnstk3
#  lineinfile:
#    path: /root/mountfs.sh
#    state: present
#    line: 'mount /dev/mapper/{{ hostvars["opnstk3"]["scsi"][item.0]["opnstk3.e4dot"][0] }}  /grid/{{ item.1 }}'
#  with_items:
#    - '{{ hostvars["localhost"]["scsiid_mount_points_opnstk3"] }}'
#  when: inventory_hostname in groups["data_nodes"] and inventory_hostname == "opnstk3"
#
#
#- name: Writing mounting script on opnstk4
#  lineinfile:
#    path: /root/mountfs.sh
#    state: present
#    line: 'mount /dev/mapper/{{ hostvars["opnstk4"]["scsi"][item.0]["opnstk4.e4dot"][0] }}  /grid/{{ item.1 }}'
#  with_items:
#    - '{{ hostvars["localhost"]["scsiid_mount_points_opnstk4"] }}'
#  when: inventory_hostname in groups["data_nodes"] and inventory_hostname == "opnstk4"
#
#
#- name: Writing mounting script on opnstk5
#  lineinfile:
#    path: /root/mountfs.sh
#    state: present
#    line: 'mount /dev/mapper/{{ hostvars["opnstk5"]["scsi"][item.0]["opnstk5.e4dot"][0] }}  /grid/{{ item.1 }}'
#  with_items:
#    - '{{ hostvars["localhost"]["scsiid_mount_points_opnstk5"] }}'
#  when: inventory_hostname in groups["data_nodes"] and inventory_hostname == "opnstk5"
#
#
#- name: Writing mounting script on opnstk6
#  lineinfile:
#    path: /root/mountfs.sh
#    state: present
#    line: 'mount /dev/mapper/{{ hostvars["opnstk6"]["scsi"][item.0]["opnstk6.e4dot"][0] }}  /grid/{{ item.1 }}'
#  with_items:
#    - '{{ hostvars["localhost"]["scsiid_mount_points_opnstk6"] }}'
#  when: inventory_hostname in groups["data_nodes"] and inventory_hostname == "opnstk6"


#- name: Eliminate old mount points
#  file:
#    path: /grid
#    state: absent
#  when: inventory_hostname in groups["data_nodes"]
#  ignore_errors: yes  # in case already removed
#
#- name: Eliminate mounting script
#  file:
#    path: /root/mountfs.sh
#    state: absent
#  when: inventory_hostname in groups["data_nodes"]
#  ignore_errors: yes # in case already removed

- name: removing old nodes file
  file:
    path: /root/nodes
    state: absent
    mode: 0644
  ignore_errors: yes


- name: writing nodes file -- 1
  file:
    path: /root/nodes
    state: touch
    mode: 0644


- name: writing nodes file -- 2
  lineinfile:
    path: /root/nodes
    state: present
    line: "{{ hostvars[groups['name_nodes']['%s'|format(item)|int]]['dns_name'] }}"
  with_sequence: start=0 end={{ groups['name_nodes'][1:] | length }}


- name: writing nodes file -- 3
  lineinfile:
    path: /root/nodes
    state: present
    line: "{{ hostvars[groups['data_nodes']['%s'|format(item)|int]]['dns_name'] }}"
  with_sequence: start=0 end={{ groups['data_nodes'][1:] | length }}


- name: installing pexpect
  yum:
    name: pexpect
    state: present
  when: inventory_hostname in groups['name_nodes']


- name: create passwordless ssh between all nodes in the cluster
  script: ../../sbin/passwdless.py root 000000 /root/nodes
  when: inventory_hostname in groups['name_nodes']
  ignore_errors: yes

